?tacl routine
#frame

#push client, console, pathmon^name, apikey 

== Customize these parameters for your system

#set client         DEMOLWC.CLIENT     == LightWave CLIENT [subvolume.]program
#set console        $ZHOME
#set pathmon^name   $LWGEO



[#DEF waited_read ROUTINE |BODY|
#FRAME

  #PUSH open_error read_error read_data read_prompt line lines
  #PUSH read_file rslt
  #SET rslt [#ARGUMENT /VALUE read_file/ FILENAME OTHERWISE]

  [#CASE [rslt]
    |1|
      == Open the file:
      #SET open_error [#REQUESTER /WAIT/ READ [read_file] read_error read_data read_prompt]
      [#IF [open_error] |THEN|
        #OUTPUT *** Error opening [read_file]: [open_error]
        #UNFRAME
        #RETURN
      ]
     
      #SET read_error 0
      [#LOOP |WHILE| NOT [read_error] |DO|
        #APPEND read_prompt *start*
        #EXTRACTV read_data line
        #APPENDV lines line
      ]

      [#IF read_error = 1 |THEN|
        #RESULT [lines]
      |ELSE|
        #OUTPUT *** Error reading [read_file]: [read_error]
      ]
    
      SINK [#REQUESTER/WAIT/CLOSE read_data]

   |OTHERWISE|
==     #OUTPUT *** invalid file ***
     #UNFRAME
     #RETURN
  ] == end #CASE
  

#UNFRAME
#RETURN
]



#set apikey [waited_read apikey]  
[#if [#EMPTYV apikey] |then|
  #output The file APIKEY must contain your Google API key -- see instructions
  #return
]

#push RC, class, attribute, tcpip^process
#setmany RC class attribute tcpip^process, [#defineinfo =tcpip^process^name]

[#if [#EMPTYV tcpip^process] |then|
  #set tcpip^process $ZTC0
]

[#if [#processexists [pathmon^name] ] |then|
  #output Shutting down existing Pathmon [pathmon^name] ...
  pathcom [pathmon^name] ; shutdown2
]

==  Start the pathmon and give it a few moments to start

#output Starting pathmon [pathmon^name] ...
pathmon / name [pathmon^name], in [console], out [console], term [console], nowait /

#delay 500

==  Configure the Pathway

#output Configuring pathmon [pathmon^name] ...

pathcom /inline/ [pathmon^name]
inlprefix +
+ errors 99
+ set pathway maxassigns           8
+ set pathway maxdefines           8
+ set pathway maxexternaltcps      0
+ set pathway maxlinkmons         16
+ set pathway maxparams            8
+ set pathway maxpathcoms          4
+ set pathway maxprograms         10
+ set pathway maxserverclasses     8
+ set pathway maxserverprocesses  16
+ set pathway maxspi               4
+ set pathway maxstartups          4
+ set pathway maxtcps              2
+ set pathway maxtellqueue         0
+ set pathway maxtells             0
+ set pathway maxterms             2
+ set pathway maxtmfrestarts       0
+ set pathway security            "n"
+ start pathway cold !

+ reset server
+ set server cpus                0:1
+ set server createdelay      0 secs
+ set server deletedelay      1 mins
+ set server highpin              on
+ set server linkdepth             4
+ set server maxservers            1
+ set server maxlinks             20
+ set server numstatic             1
+ set server tmf                 off
+ set server debug               off

+ set server in            [console]
+ set server out           [console]
+ set server program        [client]

+ set server param tcpip-process    [tcpip^process]
+ set server param log              +logopts
+ set server param diag-log         +logopts
+ set server param monitor          "api log diag-log"
+ set server param api               api

+ set server param api-param-google-api-key AIzaSyATgGvRu0PpgnWRRupKkY6W5JrrRf60zuk

+ set server param base-url          https://maps.googleapis.com

+ add server GOOGLE-GEOCODE

+ start server *
 
#inlineeof

#unframe
#return


